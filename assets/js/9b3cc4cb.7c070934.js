(self.webpackChunkdoc_ops=self.webpackChunkdoc_ops||[]).push([[312],{3564:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return d},default:function(){return p}});var i=n(2122),r=n(9756),o=(n(7294),n(3905)),a=["components"],c={},l="Config Reference",s={unversionedId:"config_reference",id:"config_reference",isDocsHomePage:!1,title:"Config Reference",description:"storage_config",source:"@site/docs/config_reference.md",sourceDirName:".",slug:"/config_reference",permalink:"/chronicle.rs/docs/config_reference",editUrl:"https://github.com/iotaledger/chronicle.rs/tree/main/docs/docs/config_reference.md",version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Getting Started",permalink:"/chronicle.rs/docs/getting_started"},next:{title:"Contribute",permalink:"/chronicle.rs/docs/contribute"}},d=[{value:"<code>storage_config</code>",id:"storage_config",children:[{value:"<code>keyspaces: Vec&lt;KeyspaceConfig&gt;</code>",id:"keyspaces-veckeyspaceconfig",children:[]},{value:"<code>listen_address: String</code>",id:"listen_address-string",children:[]},{value:"<code>thread_count: Enum</code>",id:"thread_count-enum",children:[]},{value:"<code>reporter_count: u8</code>",id:"reporter_count-u8",children:[]},{value:"<code>local_datacenter: String</code>",id:"local_datacenter-string",children:[]},{value:"<code>partition_config</code>",id:"partition_config",children:[]}]},{value:"<code>api_config</code>",id:"api_config",children:[]},{value:"<code>broker_config</code>",id:"broker_config",children:[{value:"<code>websocket_address: String</code>",id:"websocket_address-string",children:[]},{value:"<code>mqtt_brokers: Vec&lt;Url&gt;</code>",id:"mqtt_brokers-vecurl",children:[]},{value:"<code>api_endpoints: Vec&lt;Url&gt;</code>",id:"api_endpoints-vecurl",children:[]},{value:"<code>retries_per_endpoint: u8</code>",id:"retries_per_endpoint-u8",children:[]},{value:"<code>retries_per_query: usize</code>",id:"retries_per_query-usize",children:[]},{value:"<code>collector_count: u8</code>",id:"collector_count-u8",children:[]},{value:"<code>requester_count: u8</code>",id:"requester_count-u8",children:[]},{value:"<code>request_timeout_secs: u64</code>",id:"request_timeout_secs-u64",children:[]},{value:"<code>parallelism: u8</code>",id:"parallelism-u8",children:[]},{value:"<code>sync_range: Option&lt;SyncRange&gt;</code>",id:"sync_range-optionsyncrange",children:[]},{value:"<code>complete_gaps_interval_secs: u64</code>",id:"complete_gaps_interval_secs-u64",children:[]},{value:"<code>logs_dir: Option&lt;String&gt;</code>",id:"logs_dir-optionstring",children:[]},{value:"<code>max_log_size: Option&lt;u64&gt;</code>",id:"max_log_size-optionu64",children:[]}]}],u={toc:d};function p(e){var t=e.components,n=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"config-reference"},"Config Reference"),(0,o.kt)("h2",{id:"storage_config"},(0,o.kt)("inlineCode",{parentName:"h2"},"storage_config")),(0,o.kt)("h3",{id:"keyspaces-veckeyspaceconfig"},(0,o.kt)("inlineCode",{parentName:"h3"},"keyspaces: Vec<KeyspaceConfig>")),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"chronicle-storage/src/config.rs#KeyspaceConfig"},"KeyspaceConfig")),(0,o.kt)("p",null,"Multiple keyspaces can be configured in order to filter incoming messages. If the ",(0,o.kt)("inlineCode",{parentName:"p"},"filter")," feature is not used, ",(0,o.kt)("em",{parentName:"p"},"only the first configured keyspace will be considered")," or the default (",(0,o.kt)("inlineCode",{parentName:"p"},"chronicle"),") if none is provided."),(0,o.kt)("p",null,"In addition to the keyspace name, each requires a map of datacenters (name -> replication factor). See ",(0,o.kt)("a",{parentName:"p",href:"https://university.scylladb.com/courses/scylla-essentials-overview/lessons/architecture/topic/datacenter/"},"here")," for more information about datacenters in ScyllaDB."),(0,o.kt)("h3",{id:"listen_address-string"},(0,o.kt)("inlineCode",{parentName:"h3"},"listen_address: String")),(0,o.kt)("p",null,"The scylla.rs dashboard listen address, where it accepts requests to manage the Scylla cluster."),(0,o.kt)("h3",{id:"thread_count-enum"},(0,o.kt)("inlineCode",{parentName:"h3"},"thread_count: Enum")),(0,o.kt)("p",null,"The number of threads Scylla will use. Can be one of ",(0,o.kt)("inlineCode",{parentName:"p"},"Count(usize)")," (a simple scalar count) or ",(0,o.kt)("inlineCode",{parentName:"p"},"CoreMultiple(usize)")," (a multiple of the number of cores the system has)."),(0,o.kt)("h3",{id:"reporter_count-u8"},(0,o.kt)("inlineCode",{parentName:"h3"},"reporter_count: u8")),(0,o.kt)("p",null,"The number of reporters Scylla will spawn."),(0,o.kt)("h3",{id:"local_datacenter-string"},(0,o.kt)("inlineCode",{parentName:"h3"},"local_datacenter: String")),(0,o.kt)("p",null,"The Scylla local datacenter."),(0,o.kt)("h3",{id:"partition_config"},(0,o.kt)("inlineCode",{parentName:"h3"},"partition_config")),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"chronicle-storage/src/config.rs#PartitionConfig"},"PartitionConfig")),(0,o.kt)("p",null,"Specifies the number of partitions to use in the database, as well as the number of milestones to use as chunks."),(0,o.kt)("p",null,"NOTICE: You can't change ",(0,o.kt)("inlineCode",{parentName:"p"},"partition_config")," in future without migration."),(0,o.kt)("h2",{id:"api_config"},(0,o.kt)("inlineCode",{parentName:"h2"},"api_config")),(0,o.kt)("p",null,"Nothing at the moment, please refer to ",(0,o.kt)("a",{parentName:"p",href:".env"},".env"),"."),(0,o.kt)("h2",{id:"broker_config"},(0,o.kt)("inlineCode",{parentName:"h2"},"broker_config")),(0,o.kt)("h3",{id:"websocket_address-string"},(0,o.kt)("inlineCode",{parentName:"h3"},"websocket_address: String")),(0,o.kt)("p",null,"The Broker dashboard listen address, where it accepts requests to manage the broker topology."),(0,o.kt)("h3",{id:"mqtt_brokers-vecurl"},(0,o.kt)("inlineCode",{parentName:"h3"},"mqtt_brokers: Vec<Url>")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Messages: mqtt topic used to receive incoming IOTA messages;"),(0,o.kt)("li",{parentName:"ul"},"MessagesReferenced: mqtt topic used to receive incoming metadata;")),(0,o.kt)("p",null,"NOTICE: You should at least have one of each."),(0,o.kt)("h3",{id:"api_endpoints-vecurl"},(0,o.kt)("inlineCode",{parentName:"h3"},"api_endpoints: Vec<Url>")),(0,o.kt)("p",null,"IOTA node-endpoints used by chronicle to fill gaps."),(0,o.kt)("h3",{id:"retries_per_endpoint-u8"},(0,o.kt)("inlineCode",{parentName:"h3"},"retries_per_endpoint: u8")),(0,o.kt)("p",null,"Max number of retries to retrieve something from ",(0,o.kt)("inlineCode",{parentName:"p"},"api_endpoints"),"."),(0,o.kt)("h3",{id:"retries_per_query-usize"},(0,o.kt)("inlineCode",{parentName:"h3"},"retries_per_query: usize")),(0,o.kt)("p",null,"Max number of retries to fetch/insert something from/to",(0,o.kt)("inlineCode",{parentName:"p"},"scylla"),", before declaring an outage, which will force the broker application to pause and await for scylla cluster to recover."),(0,o.kt)("h3",{id:"collector_count-u8"},(0,o.kt)("inlineCode",{parentName:"h3"},"collector_count: u8")),(0,o.kt)("p",null,"The number of concurrent collectors which collect data from feed sources also it's used as solidifier_count."),(0,o.kt)("h3",{id:"requester_count-u8"},(0,o.kt)("inlineCode",{parentName:"h3"},"requester_count: u8")),(0,o.kt)("p",null,"The number of concurrent requesters per collector."),(0,o.kt)("p",null,"NOTE: requesters are used by collector to fetch missing data from ",(0,o.kt)("inlineCode",{parentName:"p"},"api_endpoint")),(0,o.kt)("h3",{id:"request_timeout_secs-u64"},(0,o.kt)("inlineCode",{parentName:"h3"},"request_timeout_secs: u64")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"api_endpoint")," request timeout."),(0,o.kt)("h3",{id:"parallelism-u8"},(0,o.kt)("inlineCode",{parentName:"h3"},"parallelism: u8")),(0,o.kt)("p",null,"The max number of concurrent solidify requests."),(0,o.kt)("h3",{id:"sync_range-optionsyncrange"},(0,o.kt)("inlineCode",{parentName:"h3"},"sync_range: Option<SyncRange>")),(0,o.kt)("p",null,"Identiy the milestone data sync range from/to."),(0,o.kt)("h3",{id:"complete_gaps_interval_secs-u64"},(0,o.kt)("inlineCode",{parentName:"h3"},"complete_gaps_interval_secs: u64")),(0,o.kt)("p",null,"Interval used by syncer to check if there are some gaps to fill/complete."),(0,o.kt)("h3",{id:"logs_dir-optionstring"},(0,o.kt)("inlineCode",{parentName:"h3"},"logs_dir: Option<String>")),(0,o.kt)("p",null,"If provided, it will archive the milestone data in ordered fashion."),(0,o.kt)("h3",{id:"max_log_size-optionu64"},(0,o.kt)("inlineCode",{parentName:"h3"},"max_log_size: Option<u64>")),(0,o.kt)("p",null,"The upper limit of the log_file_size."),(0,o.kt)("p",null,"NOTE: Ensure to use a limit within your filesystem range."))}p.isMDXComponent=!0}}]);